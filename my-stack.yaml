AWSTemplateFormatVersion: '2010-09-09'
Description: Create VPC + IGW + Public Subnet + EC2 (Kubernetes Master Node with Amazon Linux 2023)

Parameters:
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance

  AmiId:
    Type: String
    Description: AMI ID for Amazon Linux 2023 

Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: k8s-vpc

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: k8s-igw

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: ap-northeast-2a
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: k8s-public-subnet

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: k8s-public-rt

  Route:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref RouteTable

  K8sSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH, Kubernetes API, NodePort, Calico ports
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 6443
          ToPort: 6443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 10250
          ToPort: 10250
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 30000
          ToPort: 32767
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 179
          ToPort: 179
          CidrIp: 0.0.0.0/0
        - IpProtocol: udp
          FromPort: 4789
          ToPort: 4789
          CidrIp: 0.0.0.0/0

  K8sMasterInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.medium
      KeyName: !Ref KeyName
      ImageId: !Ref AmiId
      SubnetId: !Ref PublicSubnet
      SecurityGroupIds:
        - !Ref K8sSecurityGroup
      Tags:
        - Key: Name
          Value: k8s-master
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          set -e
          dnf update -y
          dnf install -y tar curl wget git conntrack iptables iproute containerd
          swapoff -a
          sed -i '/ swap / s/^/#/' /etc/fstab
          mkdir -p /etc/containerd
          containerd config default > /etc/containerd/config.toml
          sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml
          systemctl enable --now containerd
          modprobe overlay
          modprobe br_netfilter
          cat <<EOF | tee /etc/modules-load.d/k8s.conf
          overlay
          br_netfilter
          EOF
          cat <<EOF | tee /etc/sysctl.d/k8s.conf
          net.bridge.bridge-nf-call-iptables = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward = 1
          EOF
          sysctl --system
          cat <<EOF > /etc/yum.repos.d/kubernetes.repo
          [kubernetes]
          name=Kubernetes
          baseurl=https://pkgs.k8s.io/core:/stable:/v1.27/rpm/
          enabled=1
          gpgcheck=1
          gpgkey=https://pkgs.k8s.io/core:/stable:/v1.27/rpm/repodata/repomd.xml.key
          exclude=kubelet kubeadm kubectl
          EOF
          dnf install -y kubelet-1.27.2 kubeadm-1.27.2 kubectl-1.27.2 --disableexcludes=kubernetes
          systemctl enable --now kubelet
          timedatectl set-timezone Asia/Seoul

Outputs:
  VPCId:
    Description: VPC ID
    Value: !Ref VPC

  SubnetId:
    Description: Subnet ID
    Value: !Ref PublicSubnet

  MasterPublicIP:
    Description: Master Node Public IP
    Value: !GetAtt K8sMasterInstance.PublicIp
